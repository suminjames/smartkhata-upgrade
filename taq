[1mdiff --git a/Gemfile b/Gemfile[m
[1mindex 5701041..b3b05a4 100644[m
[1m--- a/Gemfile[m
[1m+++ b/Gemfile[m
[36m@@ -11,7 +11,6 @@[m [mgem 'jbuilder', '~> 2.0'[m
 gem 'jquery-hotkeys-rails', '~> 0.7.9.1'[m
 gem 'kaminari'[m
 gem 'bootstrap-kaminari-views'[m
[31m-gem 'validates_timeliness', '~> 4.0'[m
 group :development, :test do[m
   gem 'byebug'[m
 end[m
[1mdiff --git a/Gemfile.lock b/Gemfile.lock[m
[1mindex 5afd086..481dc93 100644[m
[1m--- a/Gemfile.lock[m
[1m+++ b/Gemfile.lock[m
[36m@@ -340,7 +340,6 @@[m [mDEPENDENCIES[m
   spring[m
   turbolinks[m
   uglifier (>= 1.3.0)[m
[31m-  validates_timeliness (~> 4.0)[m
   web-console (~> 2.0)[m
 [m
 BUNDLED WITH[m
[1mdiff --git a/app/assets/javascripts/vouchers.coffee b/app/assets/javascripts/vouchers.coffee[m
[1mindex f6afa4d..f07fac0 100644[m
[1m--- a/app/assets/javascripts/vouchers.coffee[m
[1m+++ b/app/assets/javascripts/vouchers.coffee[m
[36m@@ -16,35 +16,67 @@[m
 #     $('.combobox').combobox();[m
 # $(document).ready(ready)[m
 [m
[32m+[m[32mmanage_cheque_all_select = () ->[m
[32m+[m[32m  $("select.select-ledger").each ->[m
[32m+[m[32m    $this = $(this)[m
[32m+[m[32m    manage_cheque($this)[m
[32m+[m
 ready = ->[m
   jQuery ->[m
[31m-    $('form').on 'click','.add_fields', (event) ->[m
[32m+[m[32m    $(document).on 'click','.asdd_fields', (event) ->[m
       time = new Date().getTime()[m
       regexp = new RegExp($(this).data('id'),'g')[m
       $(this).before($(this).data('fields').replace(regexp,time))[m
       event.preventDefault()[m
       debugger;[m
       $('select.combobox').combobox()[m
[32m+[m[32m      manage_cheque_all_select()[m
   jQuery ->[m
     $('select.combobox').combobox()[m
 $(document).ready(ready)[m
 [m
[32m+[m[32m$(document).on 'click','.add_fields', (event) ->[m
[32m+[m[32m  time = new Date().getTime()[m
[32m+[m[32m  regexp = new RegExp($(this).data('id'),'g')[m
[32m+[m[32m  $(this).before($(this).data('fields').replace(regexp,time))[m
[32m+[m[32m  event.preventDefault()[m
[32m+[m[32m  debugger;[m
[32m+[m[32m  $('select.combobox').combobox()[m
[32m+[m[32m  manage_cheque_all_select()[m
[32m+[m
[32m+[m[32mmanage_cheque = ($this) ->[m
[32m+[m[32m  $val = $this.val()[m
[32m+[m[32m  if ($this.find("option[value="+$val+"]").text().indexOf('Bank:') == 0)[m
[32m+[m[32m    $this.parent().parent().find('.cheque').show()[m
[32m+[m[32m  else[m
[32m+[m[32m    $this.parent().parent().find('.cheque').hide()[m
[32m+[m
[32m+[m
[32m+[m[32m$ ->[m
[32m+[m[32m  manage_cheque_all_select()[m
 [m
 $ ->[m
[31m-  $('select.combobox').on 'change', (event) ->[m
[32m+[m[32m  $(document).on 'change','select.select-ledger', (event) ->[m
     $this = $(this)[m
[31m-    $val = $this.val()[m
[31m-    if ($("select.combobox option[value="+$val+"]").text().indexOf('Bank:') == 0)[m
[31m-      $this.parent().parent().find('.cheque').show()[m
[31m-    else[m
[31m-      $this.parent().parent().find('.cheque').hide()[m
[32m+[m[32m    manage_cheque($this)[m
[32m+[m
 $ ->[m
   $('#new_voucher').on 'submit', (event) ->[m
[31m-    event.preventDefault()[m
[31m-    $("select.combobox").each ->[m
[32m+[m[32m    $(".particular").each ->[m
[32m+[m[32m      $this = $(this)[m
[32m+[m[32m      if (parseFloat($this.find('.voucher_particulars_amnt input').val()) == 0)[m
[32m+[m[32m        $this.remove()[m
[32m+[m
[32m+[m
[32m+[m[32m    $("select.select-ledger").each ->[m
       $this = $(this)[m
       $val = $val = $this.val()[m
       if ($this.find("option[value="+$val+"]").text().indexOf('Bank:') == 0)[m
[31m-        console.log('asd')[m
[31m-      else[m
[31m-        console.log('asdfdd')[m
[32m+[m[32m        $input = $this.parent().parent().find('.cheque input')[m
[32m+[m[32m        if($input.val().trim().length == 0)[m
[32m+[m[32m          $input.parent().addClass('has-error')[m
[32m+[m[32m          $input.parent().append('<p class="error">Cheque cant be empty</p>')[m
[32m+[m[32m          event.preventDefault()[m
[32m+[m[32m        else[m
[32m+[m[32m          $input.parent().removeClass('has-error')[m
[32m+[m[32m          $input.parent().find('p.error').hide()[m
[1mdiff --git a/app/assets/stylesheets/application.css.scss b/app/assets/stylesheets/application.css.scss[m
[1mindex dfdec10..5940c9b 100644[m
[1m--- a/app/assets/stylesheets/application.css.scss[m
[1m+++ b/app/assets/stylesheets/application.css.scss[m
[36m@@ -30,6 +30,7 @@[m [mbody {[m
 [m
 .box-body.content-area {[m
 	min-height: 500px;[m
[32m+[m	[32mpadding:25px;[m
 }[m
 [m
 @media screen and (-webkit-min-device-pixel-ratio:0) {  /*safari and chrome*/[m
[1mdiff --git a/app/controllers/files/floorsheets_controller.rb b/app/controllers/files/floorsheets_controller.rb[m
[1mindex 93e2ecb..7ee8da3 100644[m
[1m--- a/app/controllers/files/floorsheets_controller.rb[m
[1m+++ b/app/controllers/files/floorsheets_controller.rb[m
[36m@@ -29,7 +29,7 @@[m [mclass Files::FloorsheetsController < ApplicationController[m
 [m
 [m
 			# grab date from the first record[m
[31m-			if xlsx.sheet(0).row(13)[0].nil?[m
[32m+[m			[32mif xlsx.sheet(0).row(12)[0].nil?[m
 				flash.now[:error] = "The file is empty"[m
 				@error = true[m
 				return[m
[36m@@ -49,7 +49,7 @@[m [mclass Files::FloorsheetsController < ApplicationController[m
 			# loop through 13th row to last row[m
 			# data starts from 13th row[m
 			ActiveRecord::Base.transaction do[m
[31m-				(13..(xlsx.sheet(0).last_row)).each do |i|[m
[32m+[m				[32m(12..(xlsx.sheet(0).last_row)).each do |i|[m
 				# (13..15).each do |i|[m
 					@row_data = xlsx.sheet(0).row(i)[m
 					break if @row_data[0] == nil[m
[36m@@ -189,16 +189,18 @@[m [mclass Files::FloorsheetsController < ApplicationController[m
 			date: @date,[m
 			client_account_id: client.id[m
 		)[m
[31m-		[m
[32m+[m
 		if type_of_transaction == ShareTransaction.transaction_types['buy'][m
 			bill.share_transactions << transaction[m
 			bill.net_amount += transaction.net_amount[m
[32m+[m			[32mbill.balance_to_pay = bill.net_amount[m
 			bill.save![m
 [m
 [m
 			# create client ledger if not exist[m
 			client_ledger = Ledger.find_or_create_by!(client_code: client_nepse_code) do |ledger|[m
 				ledger.name = client_name[m
[32m+[m				[32mledger.client_account_id = client.id[m
 			end[m
 			# assign the client ledgers to group clients[m
 			client_group = Group.find_or_create_by!(name: "Clients")[m
[1mdiff --git a/app/controllers/files/sales_controller.rb b/app/controllers/files/sales_controller.rb[m
[1mindex 4b6f5cc..aeeb4a4 100644[m
[1m--- a/app/controllers/files/sales_controller.rb[m
[1m+++ b/app/controllers/files/sales_controller.rb[m
[36m@@ -66,6 +66,7 @@[m [mclass Files::SalesController < ApplicationController[m
         @processed_data  << hash[m
 [m
       end[m
[32m+[m
       @processed_data = @processed_data.drop(1) if @processed_data[0][:settlement_id]=='Settlement ID'[m
 [m
       # by default the process is incomplete[m
[36m@@ -85,6 +86,7 @@[m [mclass Files::SalesController < ApplicationController[m
             raise ActiveRecord::Rollback[m
             return[m
           end[m
[32m+[m
           amount_receivable = hash[:amount_receivable].delete(',').to_f[m
           transaction.settlement_id = hash[:settlement_id][m
           transaction.cgt = hash[:cgt].delete(',').to_f[m
[36m@@ -103,7 +105,7 @@[m [mclass Files::SalesController < ApplicationController[m
           transaction.save![m
 [m
           @sales_settlement_id = SalesSettlement.find_or_create_by!(settlement_id: settlement_id).id[m
[31m-          redirect_to sales_settlement_path(@sales_settlement_id) and return[m
[32m+[m
         end[m
       end[m
 [m
[36m@@ -112,7 +114,7 @@[m [mclass Files::SalesController < ApplicationController[m
         @error = true[m
         return[m
       end[m
[31m-[m
[32m+[m[32m      redirect_to sales_settlement_path(@sales_settlement_id)[m
 [m
 		end[m
 	end[m
[1mdiff --git a/app/controllers/sales_settlements_controller.rb b/app/controllers/sales_settlements_controller.rb[m
[1mindex bcc6e54..f5fa0a0 100644[m
[1m--- a/app/controllers/sales_settlements_controller.rb[m
[1m+++ b/app/controllers/sales_settlements_controller.rb[m
[36m@@ -14,7 +14,7 @@[m [mclass SalesSettlementsController < ApplicationController[m
   # GET /sales_settlements/1.json[m
   def show[m
     @share_transactions = ShareTransaction.where(settlement_id: @sales_settlement.settlement_id)[m
[31m-    @share_transactions_raw = smart_listing_create(:share_transactions, ShareTransaction.all, partial: "share_transactions/list", page_sizes: [50])[m
[32m+[m[32m    @share_transactions_raw = smart_listing_create(:share_transactions, @share_transactions, partial: "share_transactions/list", page_sizes: [50])[m
   end[m
 [m
   # GET /sales_settlements/new[m
[1mdiff --git a/app/controllers/vouchers_controller.rb b/app/controllers/vouchers_controller.rb[m
[1mindex 2f8bfff..46f4900 100644[m
[1m--- a/app/controllers/vouchers_controller.rb[m
[1m+++ b/app/controllers/vouchers_controller.rb[m
[36m@@ -15,16 +15,41 @@[m [mclass VouchersController < ApplicationController[m
 [m
   # GET /vouchers/new[m
   def new[m
[31m-    @voucher = Voucher.new[m
[31m-    @voucher.particulars = [Particular.new][m
[31m-[m
[32m+[m[32m    # get parameters for voucher types[m
     @voucher_type = Voucher.voucher_types[params[:voucher_type]][m
[32m+[m[32m    # client account id ensures the vouchers are on the behalf of the client[m
[32m+[m[32m    @clent_account_id = params[:client_account_id][m
[32m+[m[32m    # get bill id if present[m
[32m+[m[32m    @bill_id = params[:bill_id][m
[32m+[m[32m    @bills = nil[m
[32m+[m[32m    @amount =  0.0[m
[32m+[m[32m    # find the bills for the client[m
[32m+[m[32m    if @client_account_id.present?[m
[32m+[m[32m      @client_account = ClientAccount.find(@client_account_id)[m
[32m+[m[32m      @bills = @client_account.bills.requiring_processing[m
[32m+[m[32m      @amount = @bills.sum(:net_amount)[m
[32m+[m[32m    elsif @bill_id.present?[m
[32m+[m[32m      @bill = Bill.find(@bill_id)[m
[32m+[m[32m      @bills = [@bill][m
[32m+[m[32m      @client_account = @bill.client_account[m
[32m+[m[32m      @amount = @bills.sum(:net_amount)[m
[32m+[m[32m    end[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m    # create new voucher[m
[32m+[m[32m    @voucher = Voucher.new[m
[32m+[m[32m    @voucher.particulars = [Particular.new(ledger_id: 1,amnt: @amount, transaction_type: 1)][m
[32m+[m[32m    # load additional data for voucher types[m
     case @voucher_type[m
[31m-    when Voucher.voucher_types[:sales][m
[32m+[m[32m    when Voucher.voucher_types[:sales],Voucher.voucher_types[:purchase][m
       @ledger_list = BankAccount.all.uniq.collect(&:ledger)[m
       @ledger_list << Ledger.find_by(name: "Cash")[m
     end[m
 [m
[32m+[m[32m    @ledger_list = BankAccount.all.uniq.collect(&:ledger)[m
[32m+[m[32m    @ledger_list << Ledger.find_by(name: "Cash")[m
[32m+[m
   end[m
 [m
   # GET /vouchers/1/edit[m
[36m@@ -34,22 +59,40 @@[m [mclass VouchersController < ApplicationController[m
   # POST /vouchers[m
   # POST /vouchers.json[m
   def create[m
[32m+[m[32m    # get parameters for voucher types[m
[32m+[m[32m    @voucher_type = params[:voucher_type].to_i[m
[32m+[m[32m    # client account id ensures the vouchers are on the behalf of the client[m
[32m+[m[32m    @clent_account_id = params[:client_account_id].to_i[m
[32m+[m[32m    # fixed ledger is the ledger for sales and purchase[m
[32m+[m[32m    @fixed_ledger_id = params[:fixed_ledger_id].to_i[m
[32m+[m[32m    @cheque_number = params[:cheque_number].to_i[m
[32m+[m
[32m+[m[32m    # ignore some validations when the voucher type is sales or purchase[m
[32m+[m[32m    @is_payment_receipt = false[m
[32m+[m
[32m+[m[32m    case @voucher_type[m
[32m+[m[32m    when Voucher.voucher_types[:sales],Voucher.voucher_types[:purchase][m
[32m+[m[32m      @ledger_list = BankAccount.all.uniq.collect(&:ledger)[m
[32m+[m[32m      @ledger_list << Ledger.find_by(name: "Cash")[m
[32m+[m[32m      @is_payment_receipt = true[m
[32m+[m[32m    end[m
[32m+[m
     @voucher = Voucher.new(voucher_params)[m
     @cal = NepaliCalendar::Calendar.new[m
 [m
     bs_string_arr =  @voucher.date_bs.to_s.split(/-/)[m
     @voucher.date = @cal.bs_to_ad(bs_string_arr[0],bs_string_arr[1], bs_string_arr[2])[m
[32m+[m
[32m+[m[32m    # to track if the voucher can be saved.[m
     @success = false[m
     @has_error = false[m
     @error_message = ""[m
     @net_blnc = 0;[m
 [m
[31m-    if @voucher.particulars.length > 1[m
[32m+[m[32m    # for voucher type sales and purchase the partiulars can one[m
[32m+[m[32m    if @voucher.particulars.length > 1 || @is_payment_receipt[m
       # check if debit equal credit or amount is not zero[m
[31m-[m
       @voucher.particulars.each do |particular|[m
[31m-        puts particular.ledger_id.nil?[m
[31m-        puts "testing"[m
         if particular.amnt == 0[m
           @has_error = true[m
           @error_message ="Dont act smart."[m
[36m@@ -60,6 +103,16 @@[m [mclass VouchersController < ApplicationController[m
           break[m
         end[m
         (particular.dr?) ? @net_blnc += particular.amnt : @net_blnc -= particular.amnt[m
[32m+[m[32m        abort(particular.transaction_type.to_s)[m
[32m+[m[32m      end[m
[32m+[m
[32m+[m
[32m+[m[32m      # add the particular to the voucher for sales or purchase[m
[32m+[m[32m      if (@is_payment_receipt)[m
[32m+[m[32m        transaction_type = @net_blnc >= 0 ? Particular.transaction_types[:cr] : Particular.transaction_types[:dr][m
[32m+[m[32m        particular_single = Particular.new(ledger_id: @fixed_ledger_id, transaction_type: transaction_type, cheque_number: @cheque_number, amnt: @net_blnc)[m
[32m+[m[32m        @voucher.particulars << particular_single[m
[32m+[m[32m        @net_blnc = 0[m
       end[m
 [m
       if @voucher.particulars.length == 2 && !@has_error[m
[1mdiff --git a/app/models/bill.rb b/app/models/bill.rb[m
[1mindex e2a813d..d088283 100644[m
[1m--- a/app/models/bill.rb[m
[1m+++ b/app/models/bill.rb[m
[36m@@ -2,7 +2,7 @@[m [mclass Bill < ActiveRecord::Base[m
   has_many :share_transactions[m
   belongs_to :client_account[m
 	enum bill_type: [ :receive, :pay ][m
[31m-	enum status: [:raw,:pending,:partial,:settled][m
[32m+[m	[32menum status: [:pending,:partial,:settled][m
 [m
   scope :find_by_client_name, -> (name) { where("client_name ILIKE ?", "%#{name}%") }[m
   scope :find_by_bill_number, -> (number) { where("bill_number" => "#{number}") }[m
[1mdiff --git a/app/models/client_account.rb b/app/models/client_account.rb[m
[1mindex ad8ab22..d0e4894 100644[m
[1m--- a/app/models/client_account.rb[m
[1m+++ b/app/models/client_account.rb[m
[36m@@ -1,4 +1,9 @@[m
 class ClientAccount < ActiveRecord::Base[m
 	belongs_to :user[m
[31m-	has_many :bills[m
[32m+[m	[32mhas_one :ledger[m
[32m+[m	[32mhas_many :bills do[m
[32m+[m[32m    def requiring_processing[m
[32m+[m[32m      where(status: [:pending,:partial])[m
[32m+[m[32m    end[m
[32m+[m[32m  end[m
 end[m
[1mdiff --git a/app/models/ledger.rb b/app/models/ledger.rb[m
[1mindex 4abc91f..44db0e8 100644[m
[1m--- a/app/models/ledger.rb[m
[1m+++ b/app/models/ledger.rb[m
[36m@@ -3,6 +3,7 @@[m [mclass Ledger < ActiveRecord::Base[m
 	has_many :vouchers, :through => :particulars[m
 	belongs_to :group[m
 	belongs_to :bank_account[m
[32m+[m	[32mbelongs_to :client_account[m
 	attr_accessor :opening_blnc_type[m
 	validates_presence_of :name[m
 	validate :positive_amount, on: :create[m
[1mdiff --git a/app/services/generate_bills_service.rb b/app/services/generate_bills_service.rb[m
[1mindex cf78713..898c7b5 100644[m
[1m--- a/app/services/generate_bills_service.rb[m
[1m+++ b/app/services/generate_bills_service.rb[m
[36m@@ -53,11 +53,13 @@[m [mclass GenerateBillsService[m
         bill.client_account_id = transaction.client_account_id[m
         bill.share_transactions << transaction[m
         bill.net_amount += transaction.net_amount[m
[32m+[m[32m        bill.balance_to_pay = bill.net_amount[m
         bill.save![m
 [m
         # create client ledger if not exist[m
   			client_ledger = Ledger.find_or_create_by!(client_code: client_account.nepse_code) do |ledger|[m
   				ledger.name = client_account.name[m
[32m+[m[32m          ledger.client_account_id =client_account.id[m
   			end[m
 [m
   			# assign the client ledgers to group clients[m
[1mdiff --git a/app/views/vouchers/_form.html.erb b/app/views/vouchers/_form.html.erb[m
[1mindex bac233f..81cf3cc 100644[m
[1m--- a/app/views/vouchers/_form.html.erb[m
[1m+++ b/app/views/vouchers/_form.html.erb[m
[36m@@ -5,6 +5,10 @@[m
 %>[m
 [m
 <%= simple_form_for(@voucher) do |f| %>[m
[32m+[m[32m  <!-- add hidden field to track the type -->[m
[32m+[m[32m  <%= hidden_field_tag 'voucher_type', @voucher_type %>[m
[32m+[m[32m  <%= hidden_field_tag 'client_account_id', @clent_account_id %>[m
[32m+[m
   <%= f.error_notification %>[m
   <div class="form-inputs">[m
     <h4>Date</h4>[m
[36m@@ -15,10 +19,10 @@[m
     <h3>Ledger to be Credited</h3>[m
     <div class="row">[m
       <div class="col-xs-4">[m
[31m-        <%= select_tag "extra_ledger_id", options_from_collection_for_select(@ledger_list, 'id', 'name') %>[m
[32m+[m[32m        <%= select_tag "fixed_ledger_id", options_from_collection_for_select(@ledger_list, 'id', 'name'), class: 'select-ledger' %>[m
       </div>[m
       <div class="col-xs-4 cheque">[m
[31m-        <%= number_field_tag "cheque" %>[m
[32m+[m[32m        <%= number_field_tag "cheque_number",nil, placeholder: 'Enter cheque number', class: 'form-control cheque' %>[m
       </div>[m
     </div>[m
 [m
[36m@@ -28,8 +32,7 @@[m
     <div class="row">[m
       <div class="col-xs-4"><h4>Ledger</h4></div>[m
       <div class="col-xs-3"><h4>Amount</h4></div>[m
[31m-      <div class="col-xs-2"><h4>Transaction Type</h4></div>[m
[31m-      <div class="col-xs-3"><h4>Details</h4></div>[m
[32m+[m[32m      <div class="col-xs-2"><h4>Dr/Cr</h4></div>[m
     </div>[m
 [m
     <%= f.fields_for :particulars do |p| %>[m
[36m@@ -42,6 +45,6 @@[m
     <%= f.input  :desc, label: false %>[m
   </div>[m
   <div class="form-actions">[m
[31m-    <%= f.submit  %>[m
[32m+[m[32m    <%= f.submit "submit", class: 'btn btn-primary'  %>[m
   </div>[m
 <% end %>[m
[1mdiff --git a/app/views/vouchers/_particular_fields.html.erb b/app/views/vouchers/_particular_fields.html.erb[m
[1mindex a65253d..7b8af55 100644[m
[1m--- a/app/views/vouchers/_particular_fields.html.erb[m
[1m+++ b/app/views/vouchers/_particular_fields.html.erb[m
[36m@@ -1,6 +1,7 @@[m
[31m-<div class="row">[m
[31m-	<div class="col-xs-4"><%= f.collection_select(:ledger_id, Ledger.all, :id, :name,{},{:class=>'form-control combobox'}) %></div>[m
[32m+[m[32m<div class="row particular">[m
[32m+[m	[32m<div class="col-xs-4"><%= f.collection_select(:ledger_id, Ledger.all, :id, :name,{},{:class=>'form-control combobox select-ledger'}) %></div>[m
 	<div class="col-xs-3"><%= f.input :amnt ,label: false %></div>[m
[31m-	<div class="col-xs-2"><%= f.select :transaction_type, options_for_select(Particular.transaction_types.keys.to_a) %></div>[m
[31m-	<div class="col-xs-3 cheque"><%= f.input :description ,label: false %></div>[m
[32m+[m	[32m<!-- <div class="col-xs-2"><%= f.input :transaction_type ,:input_html => { :value => 'dr' }, label: false , readonly: true%></div> -->[m
[32m+[m	[32m<div class="col-xs-2"><%= f.select :transaction_type, options_for_select(Particular.transaction_types.keys.to_a,"dr"),{},{:disabled => true} %></div>[m
[32m+[m	[32m<div class="col-xs-3 cheque"><%= f.number_field :cheque_number,		placeholder: 'Enter cheque number', class: 'form-control cheque' %></div>[m
 </div>[m
[1mdiff --git a/config/initializers/validates_timeliness.rb b/config/initializers/validates_timeliness.rb[m
[1mdeleted file mode 100644[m
[1mindex 9f004af..0000000[m
[1m--- a/config/initializers/validates_timeliness.rb[m
[1m+++ /dev/null[m
[36m@@ -1,40 +0,0 @@[m
[31m-ValidatesTimeliness.setup do |config|[m
[31m-  # Extend ORM/ODMs for full support (:active_record included).[m
[31m-  config.extend_orms = [ :active_record ][m
[31m-  #[m
[31m-  # Default timezone[m
[31m-  # config.default_timezone = :utc[m
[31m-  #[m
[31m-  # Set the dummy date part for a time type values.[m
[31m-  # config.dummy_date_for_time_type = [ 2000, 1, 1 ][m
[31m-  #[m
[31m-  # Ignore errors when restriction options are evaluated[m
[31m-  # config.ignore_restriction_errors = false[m
[31m-  #[m
[31m-  # Re-display invalid values in date/time selects[m
[31m-  # config.enable_date_time_select_extension![m
[31m-  #[m
[31m-  # Handle multiparameter date/time values strictly[m
[31m-  # config.enable_multiparameter_extension![m
[31m-  #[m
[31m-  # Shorthand date and time symbols for restrictions[m
[31m-  # config.restriction_shorthand_symbols.update([m
[31m-  #   :now   => lambda { Time.current },[m
[31m-  #   :today => lambda { Date.current }[m
[31m-  # )[m
[31m-  #[m
[31m-  # Use the plugin date/time parser which is stricter and extendable[m
[31m-  # config.use_plugin_parser = false[m
[31m-  #[m
[31m-  # Add one or more formats making them valid. e.g. add_formats(:date, 'd(st|rd|th) of mmm, yyyy')[m
[31m-  # config.parser.add_formats()[m
[31m-  #[m
[31m-  # Remove one or more formats making them invalid. e.g. remove_formats(:date, 'dd/mm/yyy')[m
[31m-  # config.parser.remove_formats()[m
[31m-  #[m
[31m-  # Change the ambiguous year threshold when parsing a 2 digit year[m
[31m-  # config.parser.ambiguous_year_threshold =  30[m
[31m-  #[m
[31m-  # Treat ambiguous dates, such as 01/02/1950, as a Non-US date.[m
[31m-  # config.parser.remove_us_formats[m
[31m-end[m
[1mdiff --git a/db/migrate/20160209092745_create_particulars.rb b/db/migrate/20160209092745_create_particulars.rb[m
[1mindex 5661cfa..f8606c0 100644[m
[1m--- a/db/migrate/20160209092745_create_particulars.rb[m
[1m+++ b/db/migrate/20160209092745_create_particulars.rb[m
[36m@@ -1,12 +1,12 @@[m
 class CreateParticulars < ActiveRecord::Migration[m
   def change[m
     create_table :particulars do |t|[m
[31m-    	t.decimal :opening_blnc , precision: 15, scale: 3, default: 0[m
[31m-    	t.integer :transaction_type [m
[31m-      t.string :description[m
[32m+[m[41m    [m	[32mt.decimal :opening_blnc , precision: 15, scale: 2, default: 0[m
[32m+[m[41m    [m	[32mt.integer :transaction_type[m
[32m+[m[32m      t.integer :cheque_number[m
       t.string :name[m
[31m-    	t.decimal :amnt , precision: 15, scale: 3, default: 0[m
[31m-    	t.decimal :running_blnc , precision: 15, scale: 3, default: 0[m
[32m+[m[41m    [m	[32mt.decimal :amnt , precision: 15, scale: 2, default: 0[m
[32m+[m[41m    [m	[32mt.decimal :running_blnc , precision: 15, scale: 2, default: 0[m
       t.timestamps null: false[m
       t.references :ledger[m
       t.references :voucher[m
[1mdiff --git a/db/migrate/20160209092837_create_ledgers.rb b/db/migrate/20160209092837_create_ledgers.rb[m
[1mindex 824ed41..a593f4a 100644[m
[1m--- a/db/migrate/20160209092837_create_ledgers.rb[m
[1m+++ b/db/migrate/20160209092837_create_ledgers.rb[m
[36m@@ -3,11 +3,12 @@[m [mclass CreateLedgers < ActiveRecord::Migration[m
     create_table :ledgers do |t|[m
     	t.string :name[m
     	t.string :client_code[m
[31m-    	t.decimal :opening_blnc , precision: 15, scale: 3, default: 0.00[m
[31m-    	t.decimal :closing_blnc , precision: 15, scale: 3, default: 0.00[m
[32m+[m[41m    [m	[32mt.decimal :opening_blnc , precision: 15, scale: 2, default: 0.00[m
[32m+[m[41m    [m	[32mt.decimal :closing_blnc , precision: 15, scale: 2, default: 0.00[m
       t.timestamps null: false[m
       t.references :group[m
       t.references :bank_account[m
[32m+[m[32m      t.references :client_account[m
     end[m
   end[m
 end[m
[1mdiff --git a/db/migrate/20160222041209_create_bills.rb b/db/migrate/20160222041209_create_bills.rb[m
[1mindex f1902cb..f1f2ec3 100644[m
[1m--- a/db/migrate/20160222041209_create_bills.rb[m
[1m+++ b/db/migrate/20160222041209_create_bills.rb[m
[36m@@ -3,8 +3,8 @@[m [mclass CreateBills < ActiveRecord::Migration[m
     create_table :bills do |t|[m
     	t.integer :bill_number[m
       t.string :client_name[m
[31m-    	t.decimal :net_amount , precision: 15, scale: 3, default: 0[m
[31m-      t.decimal :balance_to_pay, precision: 15, scale: 3, default: 0[m
[32m+[m[41m    [m	[32mt.decimal :net_amount , precision: 15, scale: 2, default: 0[m
[32m+[m[32m      t.decimal :balance_to_pay, precision: 15, scale: 2, default: 0[m
     	t.integer :bill_type[m
     	t.integer :status , default: 0[m
       t.timestamps null: false[m
[36m@@ -15,4 +15,4 @@[m [mclass CreateBills < ActiveRecord::Migration[m
 [m
     add_index :bills, [:fy_code, :bill_number], unique: true[m
   end[m
[31m-end[m
\ No newline at end of file[m
[32m+[m[32mend[m
[1mdiff --git a/db/migrate/20160222061502_create_share_transactions.rb b/db/migrate/20160222061502_create_share_transactions.rb[m
[1mindex 11c055a..f0fbdf9 100644[m
[1m--- a/db/migrate/20160222061502_create_share_transactions.rb[m
[1m+++ b/db/migrate/20160222061502_create_share_transactions.rb[m
[36m@@ -5,20 +5,20 @@[m [mclass CreateShareTransactions < ActiveRecord::Migration[m
       t.integer :buyer[m
       t.integer :seller[m
       t.integer :quantity[m
[31m-      t.decimal :share_rate , precision: 10, scale: 3, default: 0[m
[31m-      t.decimal :share_amount, precision: 15, scale: 3, default: 0[m
[31m-      t.decimal :sebo, precision: 15, scale: 3, default: 0[m
[32m+[m[32m      t.decimal :share_rate , precision: 10, scale: 2, default: 0[m
[32m+[m[32m      t.decimal :share_amount, precision: 15, scale: 2, default: 0[m
[32m+[m[32m      t.decimal :sebo, precision: 15, scale: 2, default: 0[m
       t.string :commission_rate[m
[31m-      t.decimal :commission_amount, precision: 15, scale: 3, default: 0[m
[31m-      t.decimal :dp_fee, precision: 15, scale: 3, default: 0[m
[31m-      t.decimal :cgt, precision: 15, scale: 3, default: 0[m
[31m-      t.decimal :net_amount, precision: 15, scale: 3, default: 0[m
[31m-      t.decimal :bank_deposit, precision: 15, scale: 3, default: 0[m
[32m+[m[32m      t.decimal :commission_amount, precision: 15, scale: 2, default: 0[m
[32m+[m[32m      t.decimal :dp_fee, precision: 15, scale: 2, default: 0[m
[32m+[m[32m      t.decimal :cgt, precision: 15, scale: 2, default: 0[m
[32m+[m[32m      t.decimal :net_amount, precision: 15, scale: 2, default: 0[m
[32m+[m[32m      t.decimal :bank_deposit, precision: 15, scale: 2, default: 0[m
       t.integer :transaction_type[m
       t.decimal :settlement_id, precision:18, scale: 0[m
[31m-      t.decimal :base_price, precision: 15, scale: 3, default: 0[m
[31m-      t.decimal :amount_receivable, precision:15, scale: 3, default: 0[m
[31m-      t.decimal :closeout_amount, precision:15, scale: 3, default:0[m
[32m+[m[32m      t.decimal :base_price, precision: 15, scale: 2, default: 0[m
[32m+[m[32m      t.decimal :amount_receivable, precision:15, scale: 2, default: 0[m
[32m+[m[32m      t.decimal :closeout_amount, precision:15, scale: 2, default:0[m
       t.date :date[m
       t.timestamps null: false[m
       t.references :bill[m
[1mdiff --git a/db/migrate/20160224080631_create_isin_infos.rb b/db/migrate/20160224080631_create_isin_infos.rb[m
[1mindex 53eed26..eb88ab2 100644[m
[1m--- a/db/migrate/20160224080631_create_isin_infos.rb[m
[1m+++ b/db/migrate/20160224080631_create_isin_infos.rb[m
[36m@@ -4,9 +4,9 @@[m [mclass CreateIsinInfos < ActiveRecord::Migration[m
     	t.string :company[m
     	t.string :isin[m
     	t.string :sector[m
[31m-    	t.decimal :max , precision: 10, scale: 3, default: 0[m
[31m-    	t.decimal :min , precision: 10, scale: 3, default: 0[m
[31m-    	t.decimal :last_price , precision: 10, scale: 3, default: 0[m
[32m+[m[41m    [m	[32mt.decimal :max , precision: 10, scale: 2, default: 0[m
[32m+[m[41m    [m	[32mt.decimal :min , precision: 10, scale: 2, default: 0[m
[32m+[m[41m    [m	[32mt.decimal :last_price , precision: 10, scale: 2, default: 0[m
       t.timestamps null: false[m
     end[m
   end[m
[1mdiff --git a/db/schema.rb b/db/schema.rb[m
[1mindex fe11165..fad7a56 100644[m
[1m--- a/db/schema.rb[m
[1m+++ b/db/schema.rb[m
[36m@@ -30,8 +30,8 @@[m [mActiveRecord::Schema.define(version: 20160308103842) do[m
   create_table "bills", force: :cascade do |t|[m
     t.integer  "bill_number"[m
     t.string   "client_name"[m
[31m-    t.decimal  "net_amount",        precision: 15, scale: 3, default: 0.0[m
[31m-    t.decimal  "balance_to_pay",    precision: 15, scale: 3, default: 0.0[m
[32m+[m[32m    t.decimal  "net_amount",        precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "balance_to_pay",    precision: 15, scale: 2, default: 0.0[m
     t.integer  "bill_type"[m
     t.integer  "status",                                     default: 0[m
     t.datetime "created_at",                                               null: false[m
[36m@@ -113,9 +113,9 @@[m [mActiveRecord::Schema.define(version: 20160308103842) do[m
     t.string   "company"[m
     t.string   "isin"[m
     t.string   "sector"[m
[31m-    t.decimal  "max",        precision: 10, scale: 3, default: 0.0[m
[31m-    t.decimal  "min",        precision: 10, scale: 3, default: 0.0[m
[31m-    t.decimal  "last_price", precision: 10, scale: 3, default: 0.0[m
[32m+[m[32m    t.decimal  "max",        precision: 10, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "min",        precision: 10, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "last_price", precision: 10, scale: 2, default: 0.0[m
     t.datetime "created_at",                                        null: false[m
     t.datetime "updated_at",                                        null: false[m
   end[m
[36m@@ -123,21 +123,22 @@[m [mActiveRecord::Schema.define(version: 20160308103842) do[m
   create_table "ledgers", force: :cascade do |t|[m
     t.string   "name"[m
     t.string   "client_code"[m
[31m-    t.decimal  "opening_blnc",    precision: 15, scale: 3, default: 0.0[m
[31m-    t.decimal  "closing_blnc",    precision: 15, scale: 3, default: 0.0[m
[31m-    t.datetime "created_at",                                             null: false[m
[31m-    t.datetime "updated_at",                                             null: false[m
[32m+[m[32m    t.decimal  "opening_blnc",      precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "closing_blnc",      precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.datetime "created_at",                                               null: false[m
[32m+[m[32m    t.datetime "updated_at",                                               null: false[m
     t.integer  "group_id"[m
     t.integer  "bank_account_id"[m
[32m+[m[32m    t.integer  "client_account_id"[m
   end[m
 [m
   create_table "particulars", force: :cascade do |t|[m
[31m-    t.decimal  "opening_blnc",     precision: 15, scale: 3, default: 0.0[m
[32m+[m[32m    t.decimal  "opening_blnc",     precision: 15, scale: 2, default: 0.0[m
     t.integer  "transaction_type"[m
[31m-    t.string   "description"[m
[32m+[m[32m    t.integer  "cheque_number"[m
     t.string   "name"[m
[31m-    t.decimal  "amnt",             precision: 15, scale: 3, default: 0.0[m
[31m-    t.decimal  "running_blnc",     precision: 15, scale: 3, default: 0.0[m
[32m+[m[32m    t.decimal  "amnt",             precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "running_blnc",     precision: 15, scale: 2, default: 0.0[m
     t.datetime "created_at",                                              null: false[m
     t.datetime "updated_at",                                              null: false[m
     t.integer  "ledger_id"[m
[36m@@ -157,20 +158,20 @@[m [mActiveRecord::Schema.define(version: 20160308103842) do[m
     t.integer  "buyer"[m
     t.integer  "seller"[m
     t.integer  "quantity"[m
[31m-    t.decimal  "share_rate",        precision: 10, scale: 3, default: 0.0[m
[31m-    t.decimal  "share_amount",      precision: 15, scale: 3, default: 0.0[m
[31m-    t.decimal  "sebo",              precision: 15, scale: 3, default: 0.0[m
[32m+[m[32m    t.decimal  "share_rate",        precision: 10, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "share_amount",      precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "sebo",              precision: 15, scale: 2, default: 0.0[m
     t.string   "commission_rate"[m
[31m-    t.decimal  "commission_amount", precision: 15, scale: 3, default: 0.0[m
[31m-    t.decimal  "dp_fee",            precision: 15, scale: 3, default: 0.0[m
[31m-    t.decimal  "cgt",               precision: 15, scale: 3, default: 0.0[m
[31m-    t.decimal  "net_amount",        precision: 15, scale: 3, default: 0.0[m
[31m-    t.decimal  "bank_deposit",      precision: 15, scale: 3, default: 0.0[m
[32m+[m[32m    t.decimal  "commission_amount", precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "dp_fee",            precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "cgt",               precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "net_amount",        precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "bank_deposit",      precision: 15, scale: 2, default: 0.0[m
     t.integer  "transaction_type"[m
     t.decimal  "settlement_id",     precision: 18[m
[31m-    t.decimal  "base_price",        precision: 15, scale: 3, default: 0.0[m
[31m-    t.decimal  "amount_receivable", precision: 15, scale: 3, default: 0.0[m
[31m-    t.decimal  "closeout_amount",   precision: 15, scale: 3, default: 0.0[m
[32m+[m[32m    t.decimal  "base_price",        precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "amount_receivable", precision: 15, scale: 2, default: 0.0[m
[32m+[m[32m    t.decimal  "closeout_amount",   precision: 15, scale: 2, default: 0.0[m
     t.date     "date"[m
     t.datetime "created_at",                                               null: false[m
     t.datetime "updated_at",                                               null: false[m
