<% @cal = NepaliCalendar::Calendar.new
    # abort('asd')

    @date = @cal.ad_to_bs(Date.today.strftime("%Y").to_s, Date.today.strftime("%m").to_s, Date.today.strftime("%d").to_s)
%>

<%= simple_form_for(@voucher) do |f| %>
  <!-- add hidden field to track the type -->
  <%= hidden_field_tag 'voucher_type', @voucher_type %>
  <%= hidden_field_tag 'client_account_id', @client_account_id %>
  <%= hidden_field_tag 'bill_id', @bill_id %>

  <%= f.error_notification %>
  <div class="form-inputs row">
    <div class="col-sm-4">
      <h4>Date</h4>
    	<%= f.date_field :date_bs, :value => @date, class: 'form-control' %>
    </div>
  </div>
  <br>
  <% if @is_purchase_sales %>
  <div class="form-inputs voucher">
    <div class="box box-primary z-light-bg">
      <div class="box-header">
        <% if @voucher_type == Voucher.voucher_types[:purchase] %>
          <h3 class="box-title">Ledger to be Credited</h3>
        <% else %>
          <h3 class="box-title">Ledger to be Debited</h3>
        <% end %>
      </div>
      <div class="box-body">
        <div class="row">
          <div class="col-xs-4 form-group">
            <%= select_tag "fixed_ledger_id", options_from_collection_for_select(@ledger_list, 'id', 'name'), class: 'select-ledger' %>
          </div>
          <div class="col-xs-4">
            <% if @voucher_type == Voucher.voucher_types[:purchase] %>
              <%= number_field_tag "cheque_number",nil, placeholder: 'Enter cheque number', class: 'form-control cheque cr' %>
            <% else %>
              <%= number_field_tag "cheque_number",nil, placeholder: 'Enter cheque number', class: 'form-control cheque dr' %>
            <% end %>
          </div>
        </div>
        <%= f.fields_for :particulars do |p| %>
          <%= render :partial => 'particular_fields', :locals => { :f => p, :extra_info => {:inverse => true} }  if ((
            @voucher_type == Voucher.voucher_types[:purchase] && p.object.transaction_type == 'cr'
          ) ||(@voucher_type == Voucher.voucher_types[:sales] && p.object.transaction_type == 'dr') )%>
        <% end %>

        <%= link_to_add_fields "Add Particular", f, :particulars, {:inverse => true } %>
      </div>
    </div>
  </div>
  <% end %>
  <br>
  <div class="form-inputs voucher">
    <div class="box box-primary z-light-bg">
      <div class="box-header">
        <h3 class="box-title">Particulars</h3>
      </div>
      <div class="box-body">
        <div class="row">
          <div class="col-xs-4"><h4>Ledger</h4></div>
          <div class="col-xs-3"><h4>Amount</h4></div>
          <div class="col-xs-2"><h4>Dr/Cr</h4></div>
        </div>
        <%= f.fields_for :particulars do |p| %>
          <%= render :partial => 'particular_fields', :locals => { :f => p, :extra_info => {:inverse => false} }  unless (p.object.transaction_type.present? && (
            @voucher_type == Voucher.voucher_types[:purchase] && p.object.transaction_type == 'cr'
          ) ||(@voucher_type == Voucher.voucher_types[:sales] && p.object.transaction_type == 'dr')  )%>
        <% end %>
        <%= link_to_add_fields "Add Particular", f, :particulars %>
      </div>
    </div>




  </div>
  <div class="form-inputs">
    <h4>Narration</h4>
    <%= f.input  :desc, label: false %>
  </div>
  <div class="form-actions">
    <%= f.submit "submit", class: 'btn btn-primary'  %>
  </div>
<% end %>
